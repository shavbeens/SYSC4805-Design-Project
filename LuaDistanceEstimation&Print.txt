--function sysCall_init()
    -- do some initialization here
    --simRemoteApi.start(19999)
--end


function sysCall_init()
    -- do some initialization here
    ProximitySensor={-1,-1,-1}
     ProximitySensor[1]=sim.getObjectHandle("Proximity_sensor_front_left")
     ProximitySensor[2]=sim.getObjectHandle("Proximity_sensor_front_bottom")
     ProximitySensor[3]=sim.getObjectHandle("Proximity_sensor_front_right")
    leftJoint=sim.getObjectHandle("LeftMotor")
    rightJoint=sim.getObjectHandle("RightMotor")
    nominalLinearVelocity=1   
    
    --Navigation
    ref_point_1=sim.getObjectHandle("CentreGravity")
    ref_point_2=sim.getObjectHandle("CentreGravity_1")
    x_axis=sim.getObjectHandle("PlaneX")  
    y_axis=sim.getObjectHandle("PlaneY")  
    
end

function sysCall_actuation()
    -- read the line detection sensors:
    sensorReading={false,false,false}
    sensorReading[1]=sim.readProximitySensor(ProximitySensor[1])
    sensorReading[3]=sim.readProximitySensor(ProximitySensor[3])
    sensorReading[2]=sim.readProximitySensor(ProximitySensor[2])
    
    --Navigation
    x1 = sim.getObjectPosition(ref_point_1, x_axis)
    y1 = sim.getObjectPosition(ref_point_1, y_axis)
    x2 = sim.getObjectPosition(ref_point_2, x_axis)
    y2 = sim.getObjectPosition(ref_point_2, y_axis)
    --y2 = sim.getObjectPosition(
    --x1 = sim.readDistance(x_axis)
    --x1 = sim.handleDistance(ref_point_1)
    --compute left and right velocities to follow the detected line:
    rightV=nominalLinearVelocity
    leftV=nominalLinearVelocity
    if sensorReading[1] then --left sensor detected obstacle
        --leftV=0.007999
        rightV=0.0 --stop right motor so robot can steer away from left obstacle
    end
    if sensorReading[3] then --right sensor detected obstacle
        --rightV=0.007999
        leftV=0.0 --stop left motor so robot can steer away from right obstacle
    end
    if sensorReading[2] then --front bottom (mid) sensor detected obstacle
        --rightV=0.007999
        leftV=0.0 --stop left motor so robot can cease
        rightV=0.0 --stop right motor so robot can cease
    end
    sim.setJointTargetVelocity(leftJoint,1)
    sim.setJointTargetVelocity(rightJoint,0)
    
    --sim.handleDistance(sim.handle_all_except_explicit) to be called to get the x1x2y1y2
    -- plz refer to :https://www.coppeliarobotics.com/helpFiles/index.html
    
    --Navigation
    x1 = x1[1]
    y1 = y1[1]
    print("CentreGravity: %s, %s", x1,y1)
end

function sysCall_sensing()
    -- put your sensing code here
end

function sysCall_cleanup()
    -- do some clean-up here
end

-- See the user manual or the available code snippets for additional callback functions and details